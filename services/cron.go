package services

import (
	"fmt"
	"laverdad-bot/db"
	googleapi "laverdad-bot/google-api"
	"laverdad-bot/locales"
	"log"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/robfig/cron/v3"
)

var c *cron.Cron
var chatID = int64(-4863046517)

func InitCron(botAPI *tgbotapi.BotAPI) {
	c = cron.New()

	// Creating new weekly event for club games
	_, err := c.AddFunc("0 0 * * 1", func() {
		log.Println("Creating new weekly event for club games!")

		CreateFridayEvent()
		CreateSaturdayEvent()
		CreateSundayEvent()
	})
	if err != nil {
		log.Fatal(err)
	}

	// Send Notification about Start Registration
	_, err = c.AddFunc("0 12 * * 1", func() {
		log.Println("Send Notification about Start Registration!")
		NotifyRegistrationStarted(botAPI)
	})
	if err != nil {
		log.Fatal(err)
	}

	c.Start()
}

func createNewEvent(starts_at time.Time, location string) {
	title := "–í–µ—á–µ—Ä –∫–ª—É–±–Ω—ã—Ö –∏–≥—Ä"
	description := fmt.Sprintf(`–ö–ª—É–±–Ω—ã–µ –∏–≥—Ä—ã (—Ñ–∞–Ω–∫–∏). 4-5 –∏–≥—Ä –ø–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –º–∞—Ñ–∏–∏ –≤ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ.

üóìÔ∏è %s
‚è≥ %s - 23:00 
üìå %s
üí∂ –î–æ–Ω–∞—Ç –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –∫–ª—É–±–∞ - 5‚Ç¨ —Å —á–µ–ª–æ–≤–µ–∫–∞.

–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–≤—ã–π —Ä–∞–∑ - –≤–µ–¥—É—â–∏–π —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∏ –ø–æ–º–æ–∂–µ—Ç –≤–ª–∏—Ç—å—Å—è, –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ü§ó
`, locales.FormatDateRU(starts_at), starts_at.Format("15:04"), location)
	event := db.Event{Title: title, Description: description, Location: location, StartsAt: starts_at}
	err := db.CreateEvent(event)
	if err != nil {
		log.Printf("Error Creating New Event: %v\n", err)
	}
	go googleapi.AddNewSheet(fmt.Sprintf("%s - %s", event.Title, event.StartsAt.Format("02.01")))
}

func nextDayOfWeek(dayOfWeek time.Weekday) time.Time {
	now := time.Now()
	daysUntilSaturday := (int(dayOfWeek) - int(now.Weekday()) + 7) % 7
	if daysUntilSaturday == 0 {
		daysUntilSaturday = 7
	}
	return now.AddDate(0, 0, daysUntilSaturday)
}

func nextDayOfWeekWithTime(dayOfWeek time.Weekday, hour int, minute int) time.Time {
	date := nextDayOfWeek(dayOfWeek)
	return time.Date(date.Year(), date.Month(), date.Day(), hour, minute, 0, 0, date.Location())
}

func CreateFridayEvent() {
	starts_at := nextDayOfWeekWithTime(time.Friday, 18, 30)
	location := "üéô –°—Ç—É–¥–∏—è: [Calle Conejito de M√°laga, 18](https://maps.app.goo.gl/K21A6KPB65FbNbcP8)"
	createNewEvent(starts_at, location)
}

func CreateSaturdayEvent() {
	starts_at := nextDayOfWeekWithTime(time.Saturday, 17, 0)
	location := "üéô –°—Ç—É–¥–∏—è: [Calle Conejito de M√°laga, 18](https://maps.app.goo.gl/K21A6KPB65FbNbcP8)"
	createNewEvent(starts_at, location)
}

func CreateSundayEvent() {
	starts_at := nextDayOfWeekWithTime(time.Sunday, 18, 30)
	location := "üçï –†–µ—Å—Ç–æ—Ä–∞–Ω: [La Mafia se sienta a la mesa](https://maps.app.goo.gl/nhiYHBUkETyxuYaq9)"
	createNewEvent(starts_at, location)
}

func NotifyRegistrationStarted(botAPI *tgbotapi.BotAPI) {
	text := `–ú–∏—Ä–Ω—ã–π –ø—Ä–∏–≤–µ—Ç –≥–æ—Ä–æ–¥—É, —Å–æ–±–µ—Ä—ë–º—Å—è –∏–≥—Ä–∞—Ç—å –≤ üî¥ –º–∞—Ñ–∏—é ‚ö´ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ?
–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –º–µ—Å—Ç–æ –∏ –≤—Ä–µ–º—è –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –ø–æ –¥–Ω—è–º.
–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∏–≥—Ä—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –±–æ—Ç @mafia_appointment_bot`

	msg := tgbotapi.NewMessage(chatID, text)
	if _, err := botAPI.Send(msg); err != nil {
		log.Println("notifyRegistrationStarted botAPI.Send error:", err)
	}
}
